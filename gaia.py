import pandas as pddef lag_str(date,lag):    annee=int(date[:4])+(int(date[4:])-lag)//12    mois=(int(date[4:])-lag)%12    if mois==0:        return str(annee-1)+'12'    elif mois<=9:        return str(annee)+'0'+str(mois)    else:        return str(annee)+str(mois)class Gaia():    def __init__(self,granting_path,stock_path):        self.vintages={'Vintage3M':3,'Vintage6M':6,'Vintage12M':12}        self.df_granting=pd.read_csv(granting_path,delimiter=';',decimal=',')        self.df_granting['DATE']=self.df_granting['DATE'].map(str)        self.df_granting=self.df_granting[(self.df_granting['DATE']!='-')&(self.df_granting['DATE']!='')]                self.df_stock=pd.read_csv(stock_path,delimiter=';',decimal=',')        self.df_stock['DATE']=self.df_stock['DATE'].map(str)    ##########################################    #####         Methodes Stock         #####    ##########################################    def compute_rr(self,df):        df.sort_values('DATE',ascending=True)        #DÃ©callage pour le calcul R0R1        df[['R0R1_r0','R0R1_ts0']]=df[['v_OST_R0','TS0']].shift(1)        #Calcul R0R1        df['R0R1']=(df['v_OST_R1']+df['TS1']+df['R0R1_ts0'])/(df['R0R1_r0']+df['R0R1_ts0'])        #DÃ©callage pour le calcul R0R4        df[['R0R4_r0','R0R4_ts0']]=df[['v_OST_R0','TS0']].shift(4)        df['R0R4_ts1']=df['TS1'].shift(3)        df['R0R4_ts2']=df['TS2'].shift(2)        df[['R0R4_r3','R0R4_ts3']]=df[['v_OST_R3','TS3']].shift(1)        #Calcul R0R4        df['R0R4']=(df['v_OST_R4']+df['TS4']+df['R0R4_ts0']+df['R0R4_ts1']+df['R0R4_ts2']+df['R0R4_ts3'])/(df['R0R4_r0']+df['R0R4_ts0'])        #Calcul R2+        df['R2+']=(df['v_OST_R2']+df['v_OST_R3']+df['v_OST_R4'])/(df['v_OST_R1']+df['v_OST_R2']+df['v_OST_R3']+df['v_OST_R4'])        return df        def get_rr(self,country,segment=''):        if segment=='':            df=self.df_stock[self.df_stock['COUNTRY']==country]            df=df.groupby(['COUNTRY','DATE']).sum().reset_index()        else:            df=self.df_stock[(self.df_stock['COUNTRY']==country)&(self.df_stock['SEGMENT']==segment)]            df=df.groupby(['COUNTRY','DATE','SEGMENT']).sum().reset_index()        #calculer les RR        df=self.compute_rr(df)                if segment=='':            return df[['COUNTRY','DATE','R0R1','R0R4','R2+']]        else:            return df[['COUNTRY','DATE','SEGMENT','R0R1','R0R4','R2+']]                def get_stock_data(self,country,data,segment=''):        if segment=='':            df=self.df_stock[self.df_stock['COUNTRY']==country]            df=df.groupby(['COUNTRY','DATE']).sum().reset_index()        else:            df=self.df_stock[(self.df_stock['COUNTRY']==country)&(self.df_stock['SEGMENT']==segment)]            df=df.groupby(['COUNTRY','DATE','SEGMENT']).sum().reset_index()        df['OS']=(df['v_OST_R0']+df['v_OST_R1']+df['v_OST_R2']+df['v_OST_R3']+                  df['v_OST_R4']+df['v_OST_R5']+df['v_OST_R6']+df['v_OST_R7'])         if segment=='':            return df[['COUNTRY','DATE',data]]        else:            return df[['COUNTRY','DATE','SEGMENT',data]]                """#######################################    #####        Methodes Granting       #####    #######################################"""        def vintage_groupby(self,df,lag,segment=False):        if segment==False:            df=df.groupby(['COUNTRY','DATE']).sum().reset_index()        else:            df=df.groupby(['COUNTRY','DATE','SEGMENT']).sum().reset_index()        df['Vintage'+str(lag)+'M']=df['Risk'+str(lag)+'M']/df['Active'+str(lag)+'M']        df.sort_values('DATE',ascending=True)        df['Vintage'+str(lag)+'M']=df['Vintage'+str(lag)+'M'].shift(-lag)        if segment==False:            return df[['COUNTRY','DATE','Vintage'+str(lag)+'M']]        else:            return df[['COUNTRY','DATE','SEGMENT','Vintage'+str(lag)+'M']]        def get_vintage(self,country,segment=''):        df_vintages={}                if segment=='':            vintage = self.df_granting[self.df_granting['COUNTRY']==country]        else:            vintage = self.df_granting[(self.df_granting['COUNTRY']==country) & (self.df_granting['SEGMENT']==segment)]                    for key,val in self.vintages.items():            if segment=='':                df_vintages[key] = self.vintage_groupby(vintage,val,False)            else:                df_vintages[key] = self.vintage_groupby(vintage,val,True)        return df_vintages        def get_granting_data(self,country,data,segment=''):        if segment=='':            df_production = self.df_granting[self.df_granting['COUNTRY']==country]            df_production=df_production.groupby(['COUNTRY','DATE']).sum().reset_index()            return df_production[['COUNTRY','DATE',data]]        else:            df_production = self.df_granting[(self.df_granting['COUNTRY']==country)&(self.df_granting['SEGMENT']==segment)]            df_production=df_production.groupby(['COUNTRY','DATE','SEGMENT']).sum().reset_index()            return df_production[['COUNTRY','DATE','SEGMENT',data]]if __name__ == '__main__':    db=Gaia('granting_gen.csv','stock_gen.csv')